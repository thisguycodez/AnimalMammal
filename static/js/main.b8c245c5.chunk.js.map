{"version":3,"sources":["header.js","center.js","App.js","serviceWorker.js","index.js"],"names":["Headz","styled","div","Imgg","img","BrandName","h1","span","Header","props","src","Cen","Row","Card","Img","Sec","section","BtnBlock","Titlez","Par","p","Sub","button","Quit","Inp","input","Secure","e","key","which","preventDefault","GiveUp","it","paragraph","target","parentNode","children","style","display","getAttribute","innerHTML","match","FigBlock","eq","useState","tries","settries","className","type","placeholder","onKeyDown","required","data","onClick","answer","inp","key_","slice","console","log","value","RegExp","par","Center","src1","src2","src3","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"26CAIA,IAAMA,EAAQC,IAAOC,IAAV,KAiBLC,EAAOF,IAAOG,IAAV,KAgBJC,EAAYJ,IAAOK,GAAV,KAkBFL,IAAOM,KAAV,KAsBO,SAASC,EAAOC,GAEzB,OAEI,kBAACT,EAAD,KACQ,kBAACG,EAAD,CAAMO,IAAKD,EAAMC,MACrB,kBAACL,EAAD,2B,izFC/EhB,IAAMM,EAAMV,IAAOC,IAAV,KAYHU,EAAMX,IAAOC,IAAV,KAcHW,EAAOZ,IAAOC,IAAV,KAgBJY,EAAMb,IAAOG,IAAV,KAkBHW,EAAMd,IAAOe,QAAV,KAUHC,EAAWhB,IAAOC,IAAV,KAORgB,EAASjB,IAAOK,GAAV,KAYNa,EAAMlB,IAAOmB,EAAV,KAMHC,EAAMpB,IAAOqB,OAAV,KA6BHC,EAAOtB,IAAOqB,OAAV,KA8BJE,EAAMvB,IAAOwB,MAAV,KAuBT,SAASC,EAAOC,GAChB,IAAMC,EAAMD,EAAEE,MAEd,GAAID,EAAI,KAAQA,EAAI,IAAY,IAANA,GAAiB,KAANA,GACrC,OAAO,EAEPD,EAAEG,iBAQF,SAASC,EAAOC,GAChB,IAAIC,EAAYD,EAAGE,OAAOC,WAAWA,WAAWC,SAAS,GACzDJ,EAAGE,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG1DN,EAAGE,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OACtB,WAAjCL,EAAUM,aAAa,SAAsBN,EAAUO,UAAUC,MAAM,YAC1ER,EAAUO,UAAV,4EAUA,SAASE,IAET,IAAIC,EAFe,EAsVIC,mBAAS,GAtVb,mBAsVdC,EAtVc,KAsVRC,EAtVQ,KAwVnB,OACA,kBAAC/B,EAAD,CAAKgC,UAAU,OACf,kBAAC7B,EAAD,KAAQ,2CAAiB2B,EAAjB,cACR,kBAACrB,EAAD,CAAKwB,KAAK,OACVD,UAAU,YACVE,YAAY,yBACZC,UAAWxB,EACXyB,UAAQ,IACR,kBAAChC,EAAD,CAAKiC,KAAK,UAAV,oGAGA,kBAACnC,EAAD,KACA,kBAACI,EAAD,CAAKgC,QAjWU,SAACC,GAEhB,IAAIC,EAAMD,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GACnDoB,EAAOF,EAAOpB,OAAOC,WAAWA,WAAWA,WAAWC,SAAS,GAAG1B,IAAI+C,OAAO,GAAG,GAMpF,GAHAC,QAAQC,WAAWJ,EAAIK,OAGpBL,EAAIK,MACP,OAAOJ,GAGP,IAAK,MAGL,GADAb,EAAK,IAAIkB,OAAO,aACbN,EAAIK,MAAMnB,MAAME,IAAOY,EAAIK,MAAMnB,MAAM,WAAW,CAGrD,IAAIqB,EAAMR,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GACvDkB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAChC,WAA3BwB,EAAIvB,aAAa,UACpBuB,EAAItB,UAAJ,wKAWe,IAARK,GACCC,EAASD,EAAM,GAEfS,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGI,UAAhD,0NAMAc,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,QAI9DQ,EAASD,EAAM,GAQvB,MAMA,IAAK,MAGL,GADAF,EAAK,IAAIkB,OAAO,eACbN,EAAIK,MAAMnB,MAAME,IAAOY,EAAIK,MAAMnB,MAAM,YAAcc,EAAIK,MAAMnB,MAAM,YAAY,CAGpF,IAAIqB,EAAMR,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GACvDkB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAChC,WAA3BwB,EAAIvB,aAAa,UACpBuB,EAAItB,UAAJ,2KAae,IAARK,GACCC,EAASD,EAAM,GAEfS,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGI,UAAhD,6NAMAc,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,QAI9DQ,EAASD,EAAM,GAOvB,MAKA,IAAK,MAGL,GADAF,EAAK,IAAIkB,OAAO,aACbN,EAAIK,MAAMnB,MAAME,IAAOY,EAAIK,MAAMnB,MAAM,gBAAgB,CAG1D,IAAIqB,EAAMR,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GACvDkB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAChC,WAA3BwB,EAAIvB,aAAa,UACpBuB,EAAItB,UAAJ,qLAYe,IAARK,GACCC,EAASD,EAAM,GAEfS,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGI,UAAhD,mNAMAc,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,QAI9DQ,EAASD,EAAM,GAMvB,MAQA,IAAK,MAGL,GADAF,EAAK,IAAIkB,OAAO,aACbN,EAAIK,MAAMnB,MAAME,IAAOY,EAAIK,MAAMnB,MAAM,QAAQ,CAGlD,IAAIqB,EAAMR,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GACvDkB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAChC,WAA3BwB,EAAIvB,aAAa,UACpBuB,EAAItB,UAAJ,yJAcW,IAARK,GACCC,EAASD,EAAM,GAEfS,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGI,UAAhD,gMAMAc,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,QAI9DQ,EAASD,EAAM,GAKnB,MAOA,IAAK,MAGL,GADAF,EAAK,IAAIkB,OAAO,YACbN,EAAIK,MAAMnB,MAAME,IAAOY,EAAIK,MAAMnB,MAAM,iBAAiB,CAG3D,IAAIqB,EAAMR,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GACvDkB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAChC,WAA3BwB,EAAIvB,aAAa,UACpBuB,EAAItB,UAAJ,6JAae,IAARK,GACCC,EAASD,EAAM,GAEfS,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGI,UAAhD,wNAMAc,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,QAI9DQ,EAASD,EAAM,GAKvB,MAMA,IAAK,MAGL,GADAF,EAAK,IAAIkB,OAAO,WACbN,EAAIK,MAAMnB,MAAME,IAAOY,EAAIK,MAAMnB,MAAM,mBAAmB,CAG7D,IAAIqB,EAAMR,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GACvDkB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAChC,WAA3BwB,EAAIvB,aAAa,UACpBuB,EAAItB,UAAJ,sKAYe,IAARK,GACCC,EAASD,EAAM,GAEfS,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGI,UAAhD,0NAMAc,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,OAG9DgB,EAAOpB,OAAOC,WAAWA,WAAWC,SAAS,GAAGC,MAAMC,QAAQ,QAI9DQ,EAASD,EAAM,GAMvB,MAMA,QACAa,QAAQC,IAAI,mBAqBUZ,UAAU,UAAhC,UACA,kBAACxB,EAAD,CAAM8B,QAAStB,EAAQgB,UAAU,YAAjC,WAOe,SAASgB,EAAOtD,GAG/B,OACA,kBAACE,EAAD,KACA,kBAACC,EAAD,CAAKmC,UAAU,OACf,kBAAClC,EAAD,CAAMkC,UAAU,SAChB,kBAACjC,EAAD,CAAKJ,IAAKD,EAAMuD,KAAMjB,UAAU,QAChC,kBAACL,EAAD,OAGA,kBAAC7B,EAAD,CAAMkC,UAAU,SAChB,kBAACjC,EAAD,CAAKJ,IAAKD,EAAMwD,KAAMlB,UAAU,QAChC,kBAACL,EAAD,OAEA,kBAAC7B,EAAD,CAAMkC,UAAU,SAChB,kBAACjC,EAAD,CAAKJ,IAAKD,EAAMyD,KAAMnB,UAAU,QAChC,kBAACL,EAAD,SCnjBeyB,MAvBf,WACE,OACE,6BACH,kBAAC3D,EAAD,CAAQE,IAAI,aAEX,kBAACqD,EAAD,CACAC,KAAK,UACLC,KAAK,UACLC,KAAK,YAGL,kBAACH,EAAD,CACAC,KAAK,UACLC,KAAK,UACLC,KAAK,cCTaE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9B,MACvB,2DCZN+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b8c245c5.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Headz = styled.div`\nflex:1;\nHeight:100px;\npadding:10px 5px;\ntransition:1s ease-in-out;\nbackground-color:#000;\ndisplay:flex;\njustify-content:flex-start;\nalign-items:center;\n\n\n\n@media screen and (max-width:500px){\n        \n       }\n`;\n\nconst Imgg = styled.img`\nwidth:100px;\nheight:100%;\nborder-radius:100%;\nbox-shadow:0 0 20px azure;\nmargin-right:50px;\n\n@media screen and (max-width:500px){\n    width:90px;\n    height:100%;\n    margin-right:10px;\n\n}\n\n`;\n\nconst BrandName = styled.h1`\ncolor:azure;\ntext-decoration:underline;\n\n\n@media screen and (max-width:500px){\nfont-size:1rem;\n    \n   }\n\n\n   @media screen and (max-width:900px) and\n   (max-height:500px) and (min-width:501px){\n       font-size:2rem;\n   }\n`;\n\n\nconst Time = styled.span`\nposition:absolute;\nright:10px;\npadding:10px 15px;\ncolor:azure;\nfloat:right;\nfont-size:2rem;\nfont-weight:bolder;\ntext-shadow:0 0 5px azure;\ncursor:pointer;\n\n\n@media screen and (max-width:500px){\n    font-size:1.5rem;\n        \n       }\n\n      \n`;\n\n\n\n export default  function Header(props){\n\n        return(\n            \n            <Headz>\n                    <Imgg src={props.src}/>\n                <BrandName>Animals & Mammals</BrandName>\n\n            </Headz>\n        )\n    }\n\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n\nconst Cen = styled.div`\nflex:1;\nheight:100%;\nwidth:100%;\ndisplay:flex;\nflex-diirection:column;\npadding-top:50px;\n\n\n`;\n\n\nconst Row = styled.div`\nflex:1;\ndisplay:flex;\njustify-content:space-between;\n\n\n@media screen and (max-width:500px){\nflex-direction:column;   \n}\n\n\n`;\n\n\nconst Card = styled.div`\nflex:1;\ndisplay:flex;\nflex-direction:column;\njustify-content:center;\nalign-items:center;\npadding:50px 100px;\n\n\n@media screen and (max-width:500px){\nwidth:100%;   \npadding:0px;\n}\n\n`;\n\nconst Img = styled.img`\nborder:solid;\nwidth:100%;\nheight:25vw;\nborder-radius:20px;\n-webkit-transition:.8s ease-in-out;\ntransition:.8s ease-in-out;\n\n\n@media screen and (max-width:500px){\nheight:325px;\nwidth:90%;\n}\n\n\n`;\n\n\nconst Sec = styled.section`\ndisplay:flex;\nflex-direction:column;\npadding:10px;\njustify-content:center;\nalign-items:center;\n\n\n`;\n\nconst BtnBlock = styled.div`\nflex:1;\ndisplay:flex;\njustify-content:space-between;\n\n`;\n\nconst Titlez = styled.h1`\nfont-size:3rem;\nfont-weight:bolder;\ntext-decoration:underline;\n\n\n@media screen and (max-width:500px){\n    font-size:2rem;\n}\n\n`;\n\nconst Par = styled.p`\nfont-size:2rem;\nfont-weight:bolder;\npadding:0% 10%;\n`;\n\nconst Sub = styled.button`\nborder:double green;\nwidth:200px;\nheight:100px;\nfont-weight:bolder;\nbox-shadow:0 0 10px #000;\nmargin:0% 30px;\nfont-size:2.5rem;\ncursor:pointer;\nborder-radius:30px;\nfont-family:oblique;\ncolor:green;\nbackground-color:rgba(0,22,12,.7);\n-webkit-text-stroke:1px #000;\ntext-shadow:0 0 10px azure;\n\n\n@media screen and (max-width:500px){\nmargin:0% 2%;\nheight:90px;\nwidth:100%;\nflex:1;\nfont-size:2rem;\n}\n\n\n\n`;\n\nconst Quit = styled.button`\nborder:double red;\nwidth:200px;\nheight:100px;\nfont-weight:bolder;\nbox-shadow:0 0 10px #000;\nmargin:0% 30px;\nfont-size:2.5rem;\ncursor:pointer;\nborder-radius:30px;\nfont-family:oblique;\ncolor:red;\nbackground-color:rgba(0,22,12,.7);\n-webkit-text-stroke:1px #000;\ntext-shadow:0 0 10px azure;\n\n\n@media screen and (max-width:500px){\nmargin:0% 2%;\nflex:1;\nwidth:175px;\nheight:90px;\nfont-size:2rem;\n\n}\n\n\n\n`;\n\nconst Inp = styled.input`\nheight:100px;\nwidth:100%;\nfont-size:2rem;\nborder-radius:10px;\nborder:double;\n\n\n\n\n@media screen and (max-width:500px){\nfont-size:1.5rem;\nmin-height:80px;\nmax-height:80px;\nheight:80px;\nmax-width:90%;\nmin-width:90%;\nwidth:90%;\n}\n\n`;\n\n\nfunction Secure(e){\nconst key = e.which\n\nif((key>64) && (key<91 || key===8 || key===16)){\nreturn true;\n}else{\ne.preventDefault()\n}\n}\n\n\n\n\n\nfunction GiveUp(it){\nlet paragraph = it.target.parentNode.parentNode.children[2]\nit.target.parentNode.parentNode.children[1].style.display=\"none\"\n\n\nit.target.parentNode.parentNode.children[0].style.display=\"none\"\nif(paragraph.getAttribute(\"data\")===\"hidden\" && paragraph.innerHTML.match(/Guess/i)){\nparagraph.innerHTML=`\n<hr />\n<h1><span role=\"img\">&#128555;</span>I Gave UP!</h1>\n<hr />\n`\n\n}\n\n}\n\nfunction FigBlock(){\n\nlet eq ;\nconst answer = (answer) =>{\n\nlet inp = answer.target.parentNode.parentNode.children[1]\nlet key_ = answer.target.parentNode.parentNode.parentNode.children[0].src.slice(-7,-4); \n\n\nconsole.log(typeof inp.value);\n\n\nif(inp.value){\nswitch(key_){\n\n//===============================================================           \ncase 'wtt':\n\neq = new RegExp(/WhipTail/i)\nif(inp.value.match(eq) || inp.value.match(/lizard/i)){\n\n//answer correct\nlet par = answer.target.parentNode.parentNode.children[2]\nanswer.target.parentNode.parentNode.children[1].style.display=\"none\"\n\n\nanswer.target.parentNode.parentNode.children[0].style.display=\"none\"\nif(par.getAttribute(\"data\")===\"hidden\"){\npar.innerHTML=`\n<hr />\n<h1><span role=\"img\">&#129497;</span>Great Job!<span role=\"img\">&#129497;</span></h1>\n<em> To be exact this is a \" WhipTail Lizard \" </em>\n<hr />\n`\n//answer correct\n}\n\n}else{\n\n    if(tries===2){\n        settries(tries+1)\n    \n        answer.target.parentNode.parentNode.children[2].innerHTML=`\n        <hr />\n        <h1><span role=\"img\">&#10060;</span>Oouu Sorry<span role=\"img\">&#10060;</span></h1>\n        <em><span role=\"img\">&#9997;</span>But This is a WhipTail Lizard.</em>\n        <hr />\n        `\n        answer.target.parentNode.parentNode.children[1].style.display=\"none\"\n        \n        \n        answer.target.parentNode.parentNode.children[0].style.display=\"none\"\n    \n    }else{\n    \n        settries(tries+1)\n    \n    }\n\n\n\n\n}    \nbreak;\n\n//===============================================================        \n//===============================================================        \n\n\ncase 'gan':\n\neq = new RegExp(/Greenanole/i)\nif(inp.value.match(eq) || inp.value.match(/Lizard/i) || inp.value.match(/Reptile/i)){\n\n//answer correct\nlet par = answer.target.parentNode.parentNode.children[2]\nanswer.target.parentNode.parentNode.children[1].style.display=\"none\"\n\n\nanswer.target.parentNode.parentNode.children[0].style.display=\"none\"\nif(par.getAttribute(\"data\")===\"hidden\"){\npar.innerHTML=`\n<hr />\n<h1><span role=\"img\">&#129497;</span>Great Job!<span role=\"img\">&#129497;</span></h1>\n<em> To be exact this is a \" Green anole Lizard \" </em>\n<hr />\n`\n//answer correct\n\n}\n\n\n}else{\n\n    if(tries===2){\n        settries(tries+1)\n    \n        answer.target.parentNode.parentNode.children[2].innerHTML=`\n        <hr />\n        <h1><span role=\"img\">&#10060;</span>Oouu Sorry<span role=\"img\">&#10060;</span></h1>\n        <em><span role=\"img\">&#9997;</span>But This is a Green anole Lizard.</em>\n        <hr />\n        `\n        answer.target.parentNode.parentNode.children[1].style.display=\"none\"\n        \n        \n        answer.target.parentNode.parentNode.children[0].style.display=\"none\"\n    \n    }else{\n    \n        settries(tries+1)\n    \n    }\n\n\n\n}    \nbreak;\n//===============================================================        \n//===============================================================        \n\n\ncase 'son':\n\neq = new RegExp(/Hedgehog/i)\nif(inp.value.match(eq) || inp.value.match(/Erinaceidae/i)){\n\n//answer correct\nlet par = answer.target.parentNode.parentNode.children[2]\nanswer.target.parentNode.parentNode.children[1].style.display=\"none\"\n\n\nanswer.target.parentNode.parentNode.children[0].style.display=\"none\"\nif(par.getAttribute(\"data\")===\"hidden\"){\npar.innerHTML=`\n<hr />\n<h1><span role=\"img\">&#129497;</span>Great Job!<span role=\"img\">&#129497;</span></h1>\n<em> Correct the Hedgehog is \" Erinaceidae \" type of mammal </em>\n<hr />\n`\n//answer correct\n\n}\n\n}else{\n\n    if(tries===2){\n        settries(tries+1)\n    \n        answer.target.parentNode.parentNode.children[2].innerHTML=`\n        <hr />\n        <h1><span role=\"img\">&#10060;</span>Oouu Sorry<span role=\"img\">&#10060;</span></h1>\n        <em><span role=\"img\">&#9997;</span>But This is a Hedgehog.</em>\n        <hr />\n        `\n        answer.target.parentNode.parentNode.children[1].style.display=\"none\"\n        \n        \n        answer.target.parentNode.parentNode.children[0].style.display=\"none\"\n    \n    }else{\n    \n        settries(tries+1)\n    \n    }\n\n\n}    \nbreak;\n\n\n//===============================================================        \n//===============================================================        \n\n\n\ncase 'owl':\n\neq = new RegExp(/Snowyowl/i)\nif(inp.value.match(eq) || inp.value.match(/owl/i)){\n\n//answer correct\nlet par = answer.target.parentNode.parentNode.children[2]\nanswer.target.parentNode.parentNode.children[1].style.display=\"none\"\n\n\nanswer.target.parentNode.parentNode.children[0].style.display=\"none\"\nif(par.getAttribute(\"data\")===\"hidden\"){\npar.innerHTML=`\n<hr />\n<h1><span role=\"img\">&#129497;</span>Great Job!<span role=\"img\">&#129497;</span></h1>\n<em> Right! This is a Snowy owl.</em>\n<hr />\n`\n//answer correct\n\n}\n\n}else{\n\n\n    \nif(tries===2){\n    settries(tries+1)\n\n    answer.target.parentNode.parentNode.children[2].innerHTML=`\n    <hr />\n    <h1><span role=\"img\">&#10060;</span>Oouu Sorry<span role=\"img\">&#10060;</span></h1>\n    <em><span role=\"img\">&#9997;</span>But This is a Snowy owl.</em>\n    <hr />\n    `\n    answer.target.parentNode.parentNode.children[1].style.display=\"none\"\n    \n    \n    answer.target.parentNode.parentNode.children[0].style.display=\"none\"\n\n}else{\n\n    settries(tries+1)\n\n}\n\n}    \nbreak;\n\n\n//===============================================================        \n//===============================================================        \n\n\ncase 'lep':\n\neq = new RegExp(/leapard/i)\nif(inp.value.match(eq) || inp.value.match(/whiteleapard/i)){\n\n//answer correct\nlet par = answer.target.parentNode.parentNode.children[2]\nanswer.target.parentNode.parentNode.children[1].style.display=\"none\"\n\n\nanswer.target.parentNode.parentNode.children[0].style.display=\"none\"\nif(par.getAttribute(\"data\")===\"hidden\"){\npar.innerHTML=`\n<hr />\n<h1><span role=\"img\">&#129497;</span>Great Job!<span role=\"img\">&#129497;</span></h1>\n<em> Right! This is a White Leapard.</em>\n<hr />\n`\n//answer correct\n\n}\n\n}else{\n\n    \n    if(tries===2){\n        settries(tries+1)\n    \n        answer.target.parentNode.parentNode.children[2].innerHTML=`\n        <hr />\n        <h1><span role=\"img\">&#10060;</span>Oouu Sorry<span role=\"img\">&#10060;</span></h1>\n        <em><span role=\"img\">&#9997;</span>But This is a White Leapard.</em>\n        <hr />\n        `\n        answer.target.parentNode.parentNode.children[1].style.display=\"none\"\n        \n        \n        answer.target.parentNode.parentNode.children[0].style.display=\"none\"\n    \n    }else{\n    \n        settries(tries+1)\n    \n    }\n\n}    \nbreak;\n\n//===============================================================        \n//===============================================================        \n\n\ncase 'bad':\n\neq = new RegExp(/badger/i)\nif(inp.value.match(eq) || inp.value.match(/Europeanbadger/i)){\n\n//answer correct\nlet par = answer.target.parentNode.parentNode.children[2]\nanswer.target.parentNode.parentNode.children[1].style.display=\"none\"\n\n\nanswer.target.parentNode.parentNode.children[0].style.display=\"none\"\nif(par.getAttribute(\"data\")===\"hidden\"){\npar.innerHTML=`\n<hr />\n<h1><span role=\"img\">&#129497;</span>Great Job!<span role=\"img\">&#129497;</span></h1>\n<em> Exactly! Its a European badger to exact.</em>\n<hr />\n`\n//answer correct\n\n}\n\n}else{\n\n    if(tries===2){\n        settries(tries+1)\n    \n        answer.target.parentNode.parentNode.children[2].innerHTML=`\n        <hr />\n        <h1><span role=\"img\">&#10060;</span>Oouu Sorry<span role=\"img\">&#10060;</span></h1>\n        <em><span role=\"img\">&#9997;</span>But This is a European badger.</em>\n        <hr />\n        `\n        answer.target.parentNode.parentNode.children[1].style.display=\"none\"\n        \n        \n        answer.target.parentNode.parentNode.children[0].style.display=\"none\"\n    \n    }else{\n    \n        settries(tries+1)\n    \n    }\n    \n\n}    \nbreak;\n\n//===============================================================        \n//===============================================================        \n\n\ndefault:\nconsole.log('Not An Answer');\n\n}\n}\n\n}\n\nlet [tries,settries] = useState(0)\n\nreturn(\n<Sec className=\"sec\">\n<Titlez><span>Who Am I?({tries}/3 tries)</span></Titlez>\n<Inp type=\"text\"\nclassName=\"answerSec\" \nplaceholder=\"Type you answer here..\"\nonKeyDown={Secure}\nrequired/>\n<Par data=\"hidden\">You have 3 tries to guess the unique name or name \nof the animal or mammal, or click \"pass\"......\n</Par>\n<BtnBlock>\n<Sub onClick={answer} className=\"subBtn\">Submit</Sub>\n<Quit onClick={GiveUp} className=\"quiteBtn\">Pass?</Quit>\n</BtnBlock>\n</Sec>\n)\n}\n\n\nexport default function Center(props){\n\n\nreturn (\n<Cen>\n<Row className=\"row\">\n<Card className=\"cardd\">\n<Img src={props.src1} className=\"imy\" />\n<FigBlock />\n</Card>\n\n<Card className=\"cardd\">\n<Img src={props.src2} className=\"imy\" />\n<FigBlock />\n</Card>\n<Card className=\"cardd\">\n<Img src={props.src3} className=\"imy\" />\n<FigBlock />\n</Card>\n</Row>\n\n\n\n</Cen>\n)\n\n\n\n}","import React from 'react';\nimport './App.css';\nimport Header from './header';\nimport Center from './center';\n\n\n\nfunction App() {\n  return (\n    <div>\n <Header src=\"goat.jpg\"/>\n\n  <Center \n  src1=\"owl.jpg\" \n  src2=\"gan.jpg\" \n  src3=\"bad.jpg\" \n  />\n\n  <Center \n  src1=\"wtt.jpg\" \n  src2=\"lep.jpg\"\n  src3=\"son.jpg\"\n  \n  />\n    </div>\n \n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}